import sys
sys.path.append("..")
from intcode import IC


states_ = [int(x) for x in "109,424,203,1,21102,11,1,0,1106,0,282,21102,18,1,0,1106,0,259,2102,1,1,221,203,1,21102,1,31,0,1106,0,282,21101,0,38,0,1106,0,259,21001,23,0,2,22101,0,1,3,21101,1,0,1,21102,57,1,0,1106,0,303,2101,0,1,222,21002,221,1,3,20102,1,221,2,21101,259,0,1,21101,0,80,0,1105,1,225,21102,1,83,2,21101,0,91,0,1105,1,303,1202,1,1,223,20102,1,222,4,21101,259,0,3,21101,225,0,2,21102,1,225,1,21101,118,0,0,1106,0,225,21002,222,1,3,21101,179,0,2,21102,1,133,0,1105,1,303,21202,1,-1,1,22001,223,1,1,21101,0,148,0,1105,1,259,1202,1,1,223,21001,221,0,4,20101,0,222,3,21102,1,19,2,1001,132,-2,224,1002,224,2,224,1001,224,3,224,1002,132,-1,132,1,224,132,224,21001,224,1,1,21102,1,195,0,105,1,109,20207,1,223,2,21002,23,1,1,21102,-1,1,3,21102,214,1,0,1106,0,303,22101,1,1,1,204,1,99,0,0,0,0,109,5,2101,0,-4,249,21201,-3,0,1,21202,-2,1,2,22101,0,-1,3,21101,0,250,0,1106,0,225,22101,0,1,-4,109,-5,2106,0,0,109,3,22107,0,-2,-1,21202,-1,2,-1,21201,-1,-1,-1,22202,-1,-2,-2,109,-3,2106,0,0,109,3,21207,-2,0,-1,1206,-1,294,104,0,99,21202,-2,1,-2,109,-3,2105,1,0,109,5,22207,-3,-4,-1,1206,-1,346,22201,-4,-3,-4,21202,-3,-1,-1,22201,-4,-1,2,21202,2,-1,-1,22201,-4,-1,1,21201,-2,0,3,21101,343,0,0,1105,1,303,1106,0,415,22207,-2,-3,-1,1206,-1,387,22201,-3,-2,-3,21202,-2,-1,-1,22201,-3,-1,3,21202,3,-1,-1,22201,-3,-1,2,21201,-4,0,1,21101,384,0,0,1106,0,303,1105,1,415,21202,-4,-1,-4,22201,-4,-3,-4,22202,-3,-2,-2,22202,-2,-4,-4,22202,-3,-2,-3,21202,-4,-1,-2,22201,-3,-2,1,21202,1,1,-4,109,-5,2105,1,0".split(',')]

x = -1
y = 0
t = 0

v = 0

ox, oy, om = 0, 0, {}

def i():

    global x, y, v, t, ox, oy, om

    if v == 0:
        ox = x
        oy = y
        x += 1

        if x == 50:
            y += 1
            x = 0

        if y == 50:
            print(t)

            for x in range(0, 50):
                for y in range(0, 50):
                    if om[(x, y)]:
                        print('X', end='')
                    else:
                        print(' ', end='')

                print('')
                print(x)
            sys.exit(0)

    if v == 0:
        v = 1
        return x
    else:
        v = 0
        return y


def o(v):

    global t, ox, oy, om

    om[(ox, oy)] = v

    if v == 1:
        t += 1


# while True:
#     ic = IC(states_)
#     ic.set_in(i)
#     ic.set_out(o)
#
#     ic.run()
# print(t)


toin = []

def i2():
    global toin
    return toin.pop(0)


v2 = 0

def o2(v):
    global v2
    v2 = v


def test(x, y):
    if x < 0 or y < 0:
        return 0

    global toin, v2

    ic = IC(states_)
    ic.set_in(i2)
    ic.set_out(o2)

    toin = [x, y]
    ic.run()

    return v2


print(test(46, 29))


cpos = 46, 29


# cpos = 1634, 1030
#
# print(cpos[0] - 100, cpos[1])
#
# print(test(cpos[0] - 100, cpos[1]))
# print(test(cpos[0] - 100, cpos[1] + 100))
#
# for y in range(cpos[1] - 25, cpos[1] + 125):
#     for x in range(cpos[0] - 125, cpos[0] + 25):
#         print(('!' if cpos[0] - 100 <= x < cpos[0] and cpos[1] <= y < cpos[1] + 100 else ' ') if test(x, y) == 0 else ('O' if cpos[0] - 100 <= x < cpos[0] and cpos[1] <= y < cpos[1] + 100 else '.'), end='')
#     print('')
#
#     # sys.exit(0)

while True:

    print(cpos)

    if test(cpos[0] - 99, cpos[1]) == 1 and test(cpos[0] - 99, cpos[1] + 99) == 1:
        print(cpos[0] - 99, cpos[1])

        for y in range(cpos[1] - 25, cpos[1] + 125):
            for x in range(cpos[0] - 125, cpos[0] + 25):
                print(' ' if test(x, y) == 0 else ('O' if cpos[0] - 100 <= x < cpos[0] and cpos[1] <= y < cpos[1] + 100 else 'X'), end='')
            print('')

        sys.exit(0)

    cpos = (cpos[0] + 1, cpos[1])

    while test(cpos[0], cpos[1]) == 0:
        cpos = (cpos[0], cpos[1] + 1)
